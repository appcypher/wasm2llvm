//! This module contains sample WebAssembly bytecodes.

/// A valid sample with only the module preamble
pub fn valid_module_with_preamble() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, // WASM_BINARY_MAGIC
        0x01, 0x00, 0x00, 0x00, // WASM_BINARY_VERSION
    ]
}

pub fn valid_module_with_type_section() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, // WASM_BINARY_MAGIC
        0x01, 0x00, 0x00, 0x00, // WASM_BINARY_VERSION
        0x01, // SECTION ID: TYPE
        0x06, //   PAYLOAD LEN
        0x01, //   COUNT
        0x60, //   FORM: FUNC_TYPE
        0x01, //     PARAM COUNT
        0x7f, //     PARAM TYPE
        0x01, //     RETURN COUNT
        0x7f, //     RETURN TYPE
    ]
}

pub fn valid_module_with_import_section() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, // WASM_BINARY_MAGIC
        0x01, 0x00, 0x00, 0x00, // WASM_BINARY_VERSION
        0x01, // SECTION ID: TYPE
        0x07, //   PAYLOAD LEN: 7
        0x01, //   ENTRY COUNT: 1
        0x60, //   FORM: FUNC_TYPE
        0x02, //     PARAM COUNT: 2
        0x7f, //     PARAM TYPE: i32
        0x7e, //     PARAM TYPE: i64
        0x01, //     RETURN COUNT: 1
        0x7f, //     RETURN TYPE: i32
        0x02, 0x4a, 0x05, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x00, 0x00, 0x03,
        0x65, 0x6e, 0x76, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x70, 0x01, 0x00, 0x01, 0x03,
        0x65, 0x6e, 0x76, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x01, 0x00, 0x01, 0x03,
        0x65, 0x6e, 0x76, 0x08, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x31, 0x03, 0x7f, 0x00,
        0x03, 0x65, 0x6e, 0x76, 0x08, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x32, 0x03, 0x7e,
        0x01,
    ]
}

pub fn valid_module_with_empty_function_body() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x02, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x60, 0x00, 0x00, 0x02, 0x1b, 0x02, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75,
        0x6e, 0x63, 0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x01,
        0x70, 0x01, 0x00, 0x01, 0x03, 0x02, 0x01, 0x01, 0x0a, 0x04, 0x01, 0x02, 0x00, 0x0b,
    ]
}

pub fn valid_module_with_locals_in_function_body() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x02, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x60, 0x00, 0x00, 0x02, 0x1b, 0x02, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75,
        0x6e, 0x63, 0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x01,
        0x70, 0x01, 0x00, 0x01, 0x03, 0x02, 0x01, 0x01, 0x0a, 0x08, 0x01, 0x06, 0x02, 0x01, 0x7f,
        0x02, 0x7e, 0x0b,
    ]
}

pub fn valid_module_with_nop_in_function_body() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x02, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x60, 0x00, 0x00, 0x02, 0x1b, 0x02, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75,
        0x6e, 0x63, 0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x01,
        0x70, 0x01, 0x00, 0x01, 0x03, 0x02, 0x01, 0x01, 0x0a, 0x07, 0x01, 0x05, 0x01, 0x01, 0x7f,
        0x01, 0x0b,
    ]
}

pub fn valid_module_with_table_section_and_maximum() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x02, 0x0c, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x00,
        0x00, 0x04, 0x05, 0x01, 0x70, 0x01, 0x01, 0x02,
    ]
}

pub fn valid_module_with_table_section_no_maximum() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x02, 0x0c, 0x01, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x00,
        0x00, 0x04, 0x04, 0x01, 0x70, 0x00, 0x01,
    ]
}

pub fn valid_module_with_memory_section_and_maximum() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x04, 0x04, 0x01, 0x70, 0x00, 0x01, 0x05, 0x04, 0x01, 0x01, 0x04, 0x46,
    ]
}

pub fn valid_module_with_memory_section_no_maximum() -> Vec<u8> {
    vec![
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01, 0x60, 0x02, 0x7f, 0x7e,
        0x01, 0x7f, 0x04, 0x04, 0x01, 0x70, 0x00, 0x01, 0x05, 0x05, 0x01, 0x00, 0xff, 0xff, 0x03,
    ]
}
